(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{427:function(e,t,a){"use strict";a.r(t);var s=a(15),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"关于-容器适配器-container-adaptors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-容器适配器-container-adaptors"}},[e._v("#")]),e._v(" 关于“容器适配器(container adaptors)”")]),e._v(" "),a("p",[e._v("在C++ primer中关于容器适配器的定义是：")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("适配器")]),e._v("是标准库中的一个通用概念。容器，迭代器和函数都有适配器。本质上，一个适配器是一种机制，能使某种事物的行为看起来像一种不同的类型。")])]),e._v(" "),a("p",[e._v("在C++ STL中有三个顺序容器适配器：stack, queue和priority_queue。这三种数据结构并不是容器，而是对容器的一种行为限制，让它能够以例如push或者pop这种操作改变所存储的内容。")]),e._v(" "),a("h2",{attrs:{id:"c-stl中的priority-queue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-stl中的priority-queue"}},[e._v("#")]),e._v(" C++ STL中的priority_queue")]),e._v(" "),a("h3",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[e._v("#")]),e._v(" 定义")]),e._v(" "),a("p",[e._v("定义代码如下：")]),e._v(" "),a("div",{staticClass:"language-C++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("template <class T, class Container = vector<T>,\n  class Compare = less<typename Container::value_type> > class priority_queue;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("可以看出默认情况下，Container是一个vector,也就是如果使用的是vector，的话，可以忽略后面Container的参数，只传class就可以了。")]),e._v(" "),a("p",[e._v('然后Compare默认使用的是less（STL所有的有序容器都默认用的是"<"，也就是less'),a("Type",[e._v("）。因此默认情况下建立出来的是一个大顶堆：priority_queue.top()取出来的是最大值。")])],1),e._v(" "),a("p",[e._v("这里大顶堆的理解是，比如vector按less排序会是下面这样：")]),e._v(" "),a("p",[e._v("1 < 2 < 3 < 4")]),e._v(" "),a("p",[e._v("这样1是在入队的地方，而4是在出队的地方，也就是top()。")]),e._v(" "),a("p",[e._v("如果想创建一个小顶堆，就要用functional中的greater"),a("Type",[e._v("()去构建，如下：")])],1),e._v(" "),a("div",{staticClass:"language-C++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("priority_queue pq(int, greater<int>());\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])])])}),[],!1,null,null,null);t.default=r.exports}}]);