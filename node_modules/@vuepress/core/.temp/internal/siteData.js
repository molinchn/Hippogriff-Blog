/**
 * Generated by "@vuepress/internal-site-data"
 */
export const siteData = {
  "title": "Evan's blog",
  "description": "web前端技术博客,简洁至上,专注web前端学习与总结。JavaScript,js,ES6,TypeScript,vue,python,css3,html5,Node,git,github等技术文章。",
  "base": "/",
  "headTags": [
    [
      "link",
      {
        "rel": "icon",
        "href": "/img/favicon.ico"
      }
    ],
    [
      "meta",
      {
        "name": "keywords",
        "content": "前端博客,个人技术博客,前端,前端开发,前端框架,web前端,前端面试题,技术文档,学习,面试,JavaScript,js,ES6,TypeScript,vue,python,css3,html5,Node,git,github,markdown"
      }
    ],
    [
      "meta",
      {
        "name": "baidu-site-verification",
        "content": "7F55weZDDc"
      }
    ],
    [
      "meta",
      {
        "name": "theme-color",
        "content": "#11a8cd"
      }
    ],
    [
      "script",
      {
        "data-ad-client": "ca-pub-7828333725993554",
        "async": "async",
        "src": "https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"
      }
    ]
  ],
  "pages": [
    {
      "title": "【C++&Leetcode】自定义排序的方法与辨析",
      "frontmatter": {
        "title": "【C++&Leetcode】自定义排序的方法与辨析",
        "date": "2021-03-14T23:19:34.000Z",
        "permalink": "/pages/2bfff1/",
        "categories": [
          "cpp"
        ],
        "tags": [
          null
        ]
      },
      "regularPath": "/100.C++/100.%E3%80%90C++&Leetcode%E3%80%91%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%92%E5%BA%8F%E7%9A%84%E6%96%B9%E6%B3%95%E4%B8%8E%E8%BE%A8%E6%9E%90.html",
      "relativePath": "100.C++/100.【C++&Leetcode】自定义排序的方法与辨析.md",
      "key": "v-ca86961c",
      "path": "/pages/2bfff1/",
      "headers": [
        {
          "level": 2,
          "title": "1. std::sort()如何自定义排序",
          "slug": "_1-std-sort-如何自定义排序"
        },
        {
          "level": 2,
          "title": "2. std::map如何自定义排序：",
          "slug": "_2-std-map-如何自定义排序"
        },
        {
          "level": 2,
          "title": "3. 使用lambda表达式自定义std::map排序",
          "slug": "_3-使用lambda表达式自定义std-map-排序"
        },
        {
          "level": 2,
          "title": "4. 小结",
          "slug": "_4-小结"
        },
        {
          "level": 2,
          "title": "5. 题外话：std::map如何按value排序",
          "slug": "_5-题外话-std-map-如何按value排序"
        }
      ],
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "C++中的lambda表达式",
      "frontmatter": {
        "title": "C++中的lambda表达式",
        "date": "2021-03-14T23:19:34.000Z",
        "permalink": "/pages/6d1162/",
        "categories": [
          "cpp"
        ],
        "tags": [
          null
        ]
      },
      "regularPath": "/100.C++/1000.C++%E4%B8%AD%E7%9A%84lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F.html",
      "relativePath": "100.C++/1000.C++中的lambda表达式.md",
      "key": "v-1c5a3b2d",
      "path": "/pages/6d1162/",
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "C风格字符串库函数总结",
      "frontmatter": {
        "title": "C风格字符串库函数总结",
        "date": "2021-05-23T17:28:13.000Z",
        "permalink": "/pages/11527e/",
        "categories": [
          "cpp"
        ],
        "tags": [
          null
        ]
      },
      "regularPath": "/100.C++/1100.C%E9%A3%8E%E6%A0%BC%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BA%93%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93.html",
      "relativePath": "100.C++/1100.C风格字符串库函数总结.md",
      "key": "v-41fb66be",
      "path": "/pages/11527e/",
      "headers": [
        {
          "level": 2,
          "title": "计算长度",
          "slug": "计算长度"
        },
        {
          "level": 3,
          "title": "strlen",
          "slug": "strlen"
        },
        {
          "level": 3,
          "title": "strspn",
          "slug": "strspn"
        },
        {
          "level": 2,
          "title": "比较",
          "slug": "比较"
        },
        {
          "level": 3,
          "title": "strcmp, strncmp, strcasecmp, strncasecmp",
          "slug": "strcmp-strncmp-strcasecmp-strncasecmp"
        },
        {
          "level": 2,
          "title": "查找字符(或字符集)",
          "slug": "查找字符-或字符集"
        },
        {
          "level": 3,
          "title": "strchr",
          "slug": "strchr"
        },
        {
          "level": 3,
          "title": "strpbrk",
          "slug": "strpbrk"
        },
        {
          "level": 2,
          "title": "分割字符串",
          "slug": "分割字符串"
        },
        {
          "level": 3,
          "title": "strtok",
          "slug": "strtok"
        },
        {
          "level": 2,
          "title": "字符串拷贝",
          "slug": "字符串拷贝"
        },
        {
          "level": 3,
          "title": "strcpy, strncpy",
          "slug": "strcpy-strncpy"
        }
      ],
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "C与C++风格的字符串辨析",
      "frontmatter": {
        "title": "C与C++风格的字符串辨析",
        "date": "2021-05-14T20:59:03.000Z",
        "permalink": "/pages/bc9f62/",
        "categories": [
          "cpp"
        ],
        "tags": [
          null
        ]
      },
      "regularPath": "/100.C++/1200.C%E4%B8%8EC++%E9%A3%8E%E6%A0%BC%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BE%A8%E6%9E%90.html",
      "relativePath": "100.C++/1200.C与C++风格的字符串辨析.md",
      "key": "v-efae18b8",
      "path": "/pages/bc9f62/",
      "headers": [
        {
          "level": 2,
          "title": "1. 关于头文件",
          "slug": "_1-关于头文件"
        },
        {
          "level": 2,
          "title": "2. 关于C风格字符串的初始化与赋值操作",
          "slug": "_2-关于c风格字符串的初始化与赋值操作"
        },
        {
          "level": 3,
          "title": "2.1 不同方式的初始化与其存储位置",
          "slug": "_2-1-不同方式的初始化与其存储位置"
        },
        {
          "level": 3,
          "title": "2.2 字符数组的名字和字符指针的关系",
          "slug": "_2-2-字符数组的名字和字符指针的关系"
        },
        {
          "level": 3,
          "title": "2.3 赋值问题",
          "slug": "_2-3-赋值问题"
        },
        {
          "level": 2,
          "title": "3. 关于混用",
          "slug": "_3-关于混用"
        },
        {
          "level": 3,
          "title": "3.1 C风格字符串转STL string",
          "slug": "_3-1-c风格字符串转stl-string"
        },
        {
          "level": 3,
          "title": "3.2 STL string转C风格",
          "slug": "_3-2-stl-string转c风格"
        },
        {
          "level": 2,
          "title": "参考",
          "slug": "参考"
        }
      ],
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "关于优先队列priority_queue",
      "frontmatter": {
        "title": "关于优先队列priority_queue",
        "date": "2021-03-14T23:19:34.000Z",
        "permalink": "/pages/12ca7b/",
        "categories": [
          "cpp"
        ],
        "tags": [
          null
        ]
      },
      "regularPath": "/100.C++/200.%E5%85%B3%E4%BA%8E%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97priority_queue.html",
      "relativePath": "100.C++/200.关于优先队列priority_queue.md",
      "key": "v-317b2952",
      "path": "/pages/12ca7b/",
      "headers": [
        {
          "level": 2,
          "title": "关于“容器适配器(container adaptors)”",
          "slug": "关于-容器适配器-container-adaptors"
        },
        {
          "level": 2,
          "title": "C++ STL中的priority_queue",
          "slug": "c-stl中的priority-queue"
        },
        {
          "level": 3,
          "title": "定义",
          "slug": "定义"
        }
      ],
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "关于C++ STL size的坑",
      "frontmatter": {
        "title": "关于C++ STL size的坑",
        "date": "2021-03-14T23:19:34.000Z",
        "permalink": "/pages/8ee751/",
        "categories": [
          "cpp"
        ],
        "tags": [
          null
        ]
      },
      "regularPath": "/100.C++/300.%E5%85%B3%E4%BA%8EC++%20STL%20size%E7%9A%84%E5%9D%91.html",
      "relativePath": "100.C++/300.关于C++ STL size的坑.md",
      "key": "v-d6b60d2c",
      "path": "/pages/8ee751/",
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "C++ 智能指针",
      "frontmatter": {
        "title": "C++ 智能指针",
        "date": "2021-04-24T20:01:43.000Z",
        "permalink": "/pages/d7e91f/",
        "categories": [
          "cpp"
        ],
        "tags": [
          null
        ]
      },
      "regularPath": "/100.C++/400.C++%20%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88.html",
      "relativePath": "100.C++/400.C++ 智能指针.md",
      "key": "v-5bcaf062",
      "path": "/pages/d7e91f/",
      "headers": [
        {
          "level": 2,
          "title": "1. shared_ptr",
          "slug": "_1-shared-ptr"
        },
        {
          "level": 2,
          "title": "2. unique_ptr",
          "slug": "_2-unique-ptr"
        },
        {
          "level": 2,
          "title": "3. weak_ptr",
          "slug": "_3-weak-ptr"
        },
        {
          "level": 2,
          "title": "全部代码与执行结果",
          "slug": "全部代码与执行结果"
        }
      ],
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "C++ const",
      "frontmatter": {
        "title": "C++ const",
        "date": "2021-03-23T19:31:26.000Z",
        "permalink": "/pages/ed51af/",
        "categories": [
          "cpp"
        ],
        "tags": [
          null
        ]
      },
      "regularPath": "/100.C++/500.C++%20const.html",
      "relativePath": "100.C++/500.C++ const.md",
      "key": "v-3e19a14d",
      "path": "/pages/ed51af/",
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "C++&STL中String常见函数用法",
      "frontmatter": {
        "title": "C++&STL中String常见函数用法",
        "date": "2021-03-14T23:19:34.000Z",
        "permalink": "/pages/56910d/",
        "categories": [
          "cpp"
        ],
        "tags": [
          null
        ]
      },
      "regularPath": "/100.C++/600.C++&STL%E4%B8%ADString%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0%E7%94%A8%E6%B3%95.html",
      "relativePath": "100.C++/600.C++&STL中String常见函数用法.md",
      "key": "v-c09d7272",
      "path": "/pages/56910d/",
      "headers": [
        {
          "level": 2,
          "title": "replace",
          "slug": "replace"
        }
      ],
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "C++11的decltype",
      "frontmatter": {
        "title": "C++11的decltype",
        "date": "2021-03-14T23:19:34.000Z",
        "permalink": "/pages/7aaebd/",
        "categories": [
          "cpp"
        ],
        "tags": [
          null
        ]
      },
      "regularPath": "/100.C++/700.C++11%E7%9A%84decltype.html",
      "relativePath": "100.C++/700.C++11的decltype.md",
      "key": "v-55c403a5",
      "path": "/pages/7aaebd/",
      "headers": [
        {
          "level": 2,
          "title": "概述",
          "slug": "概述"
        },
        {
          "level": 2,
          "title": "使用方法",
          "slug": "使用方法"
        },
        {
          "level": 2,
          "title": "注意事项",
          "slug": "注意事项"
        },
        {
          "level": 2,
          "title": "参考",
          "slug": "参考"
        }
      ],
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "C++11右值引用【来自IBM文档】",
      "frontmatter": {
        "title": "C++11右值引用【来自IBM文档】",
        "date": "2021-03-20T19:39:16.000Z",
        "permalink": "/pages/6dbfcc/",
        "categories": [
          "cpp"
        ],
        "tags": [
          null
        ]
      },
      "regularPath": "/100.C++/800.C++11%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E3%80%90%E6%9D%A5%E8%87%AAIBM%E6%96%87%E6%A1%A3%E3%80%91.html",
      "relativePath": "100.C++/800.C++11右值引用【来自IBM文档】.md",
      "key": "v-8e6d81bc",
      "path": "/pages/6dbfcc/",
      "headers": [
        {
          "level": 2,
          "title": "新特性的目的",
          "slug": "新特性的目的"
        },
        {
          "level": 2,
          "title": "左值与右值的定义",
          "slug": "左值与右值的定义"
        },
        {
          "level": 2,
          "title": "左值和右值的语法符号",
          "slug": "左值和右值的语法符号"
        },
        {
          "level": 2,
          "title": "转移语义的定义",
          "slug": "转移语义的定义"
        },
        {
          "level": 2,
          "title": "实现转移构造函数和转移赋值函数",
          "slug": "实现转移构造函数和转移赋值函数"
        },
        {
          "level": 2,
          "title": "标准库函数 std::move",
          "slug": "标准库函数-std-move"
        },
        {
          "level": 2,
          "title": "精确传递 (Perfect Forwarding)",
          "slug": "精确传递-perfect-forwarding"
        },
        {
          "level": 2,
          "title": "总结",
          "slug": "总结"
        }
      ],
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "C++11中循环auto的引用",
      "frontmatter": {
        "title": "C++11中循环auto的引用",
        "date": "2021-03-14T23:19:34.000Z",
        "permalink": "/pages/17874f/",
        "categories": [
          "cpp"
        ],
        "tags": [
          null
        ]
      },
      "regularPath": "/100.C++/900.C++11%E4%B8%AD%E5%BE%AA%E7%8E%AFauto%E7%9A%84%E5%BC%95%E7%94%A8.html",
      "relativePath": "100.C++/900.C++11中循环auto的引用.md",
      "key": "v-7d1c1482",
      "path": "/pages/17874f/",
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "你知道的越多，不知道的也就越多",
      "frontmatter": {
        "title": "你知道的越多，不知道的也就越多",
        "date": "2020-05-06T15:52:40.000Z",
        "permalink": "/pages/f2e63f",
        "sidebar": "auto",
        "categories": [
          "随笔"
        ],
        "tags": [
          "学习",
          "知识",
          "鸡汤"
        ],
        "author": {
          "name": "xugaoyi",
          "link": "https://github.com/xugaoyi"
        }
      },
      "regularPath": "/_posts/%E9%9A%8F%E7%AC%94/%E4%BD%A0%E7%9F%A5%E9%81%93%E7%9A%84%E8%B6%8A%E5%A4%9A%EF%BC%8C%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%B9%9F%E5%B0%B1%E8%B6%8A%E5%A4%9A.html",
      "relativePath": "_posts/随笔/你知道的越多，不知道的也就越多.md",
      "key": "v-cf588a08",
      "path": "/pages/f2e63f/",
      "excerpt": "<p>不知道大家有没有发现，我们身边经常有这样的人，他们越是有能力的，越是有知识的，越是低调，越是谦逊，因为他们深知，知道的越多，不知道的也就越多。</p>\n",
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "拥抱生活，拥抱快乐",
      "frontmatter": {
        "title": "拥抱生活，拥抱快乐",
        "date": "2020-06-26T20:40:38.000Z",
        "permalink": "/pages/cd8bde/",
        "sidebar": "auto",
        "categories": [
          "随笔"
        ],
        "tags": [
          "鸡汤"
        ],
        "author": {
          "name": "xugaoyi",
          "link": "https://github.com/xugaoyi"
        }
      },
      "regularPath": "/_posts/%E9%9A%8F%E7%AC%94/%E6%8B%A5%E6%8A%B1%E7%94%9F%E6%B4%BB%EF%BC%8C%E6%8B%A5%E6%8A%B1%E5%BF%AB%E4%B9%90.html",
      "relativePath": "_posts/随笔/拥抱生活，拥抱快乐.md",
      "key": "v-db2c6408",
      "path": "/pages/cd8bde/",
      "excerpt": "<p>生活在后现代的今天，很多人都有一种虚无感，认为人生没有意义。但是，人生不可能没有意义，因为当你认为没有意义的时候，一定有一个与之相对应的概念叫有意义。</p>\n",
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "标签",
      "frontmatter": {
        "tagsPage": true,
        "title": "标签",
        "permalink": "/tags/",
        "article": false
      },
      "regularPath": "/@pages/tagsPage.html",
      "relativePath": "@pages/tagsPage.md",
      "key": "v-df932b2c",
      "path": "/tags/",
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "分类",
      "frontmatter": {
        "categoriesPage": true,
        "title": "分类",
        "permalink": "/categories/",
        "article": false
      },
      "regularPath": "/@pages/categoriesPage.html",
      "relativePath": "@pages/categoriesPage.md",
      "key": "v-1a2910ca",
      "path": "/categories/",
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "Home",
      "frontmatter": {
        "home": true,
        "heroText": "Hippogriff's Blog",
        "tagline": "此世无存的幻马"
      },
      "regularPath": "/",
      "relativePath": "index.md",
      "key": "v-345689c3",
      "path": "/",
      "lastUpdated": "2021/06/03, 19:22:51"
    },
    {
      "title": "归档",
      "frontmatter": {
        "archivesPage": true,
        "title": "归档",
        "permalink": "/archives/",
        "article": false
      },
      "regularPath": "/@pages/archivesPage.html",
      "relativePath": "@pages/archivesPage.md",
      "key": "v-3747cfea",
      "path": "/archives/",
      "lastUpdated": "2021/06/03, 19:22:51"
    }
  ],
  "themeConfig": {
    "nav": [
      {
        "text": "首页",
        "link": "/"
      },
      {
        "text": "C++",
        "link": "/pages/2bfff1/"
      }
    ],
    "sidebarDepth": 2,
    "logo": "/img/EB-logo.png",
    "repo": "xugaoyi/vuepress-theme-vdoing",
    "searchMaxSuggestions": 10,
    "lastUpdated": "上次更新",
    "docsDir": "docs",
    "editLinks": true,
    "editLinkText": "编辑",
    "sidebar": {
      "/100.C++/": [
        [
          "100.【C++&Leetcode】自定义排序的方法与辨析.md",
          "【C++&Leetcode】自定义排序的方法与辨析",
          "/pages/2bfff1/"
        ],
        [
          "200.关于优先队列priority_queue.md",
          "关于优先队列priority_queue",
          "/pages/12ca7b/"
        ],
        [
          "300.关于C++ STL size的坑.md",
          "关于C++ STL size的坑",
          "/pages/8ee751/"
        ],
        [
          "400.C++ 智能指针.md",
          "C++ 智能指针",
          "/pages/d7e91f/"
        ],
        [
          "500.C++ const.md",
          "C++ const",
          "/pages/ed51af/"
        ],
        [
          "600.C++&STL中String常见函数用法.md",
          "C++&STL中String常见函数用法",
          "/pages/56910d/"
        ],
        [
          "700.C++11的decltype.md",
          "C++11的decltype",
          "/pages/7aaebd/"
        ],
        [
          "800.C++11右值引用【来自IBM文档】.md",
          "C++11右值引用【来自IBM文档】",
          "/pages/6dbfcc/"
        ],
        [
          "900.C++11中循环auto的引用.md",
          "C++11中循环auto的引用",
          "/pages/17874f/"
        ],
        [
          "1000.C++中的lambda表达式.md",
          "C++中的lambda表达式",
          "/pages/6d1162/"
        ],
        [
          "1100.C风格字符串库函数总结.md",
          "C风格字符串库函数总结",
          "/pages/11527e/"
        ],
        [
          "1200.C与C++风格的字符串辨析.md",
          "C与C++风格的字符串辨析",
          "/pages/bc9f62/"
        ]
      ],
      "catalogue": {}
    },
    "author": {
      "name": "Absm",
      "link": "https://github.com/xugaoyi"
    },
    "blogger": {
      "avatar": "https://gitee.com/molinchn/BlogImage/raw/master/img/%E9%98%BF%E7%A6%8F%E5%A4%B4%E5%83%8F.jpg",
      "name": "Absm",
      "slogan": "什么也不会"
    },
    "social": {
      "icons": [
        {
          "iconClass": "icon-youjian",
          "title": "发邮件",
          "link": "mailto:894072666@qq.com"
        },
        {
          "iconClass": "icon-github",
          "title": "GitHub",
          "link": "https://github.com/xugaoyi"
        },
        {
          "iconClass": "icon-erji",
          "title": "听音乐",
          "link": "https://music.163.com/#/playlist?id=755597173"
        }
      ]
    },
    "footer": {
      "createYear": 2019,
      "copyrightInfo": "Evan Xu | <a href=\"https://github.com/xugaoyi/vuepress-theme-vdoing/blob/master/LICENSE\" target=\"_blank\">MIT License</a>"
    },
    "htmlModules": {
      "homeSidebarB": "<!-- 纵向自适应 -->\n    <ins class=\"adsbygoogle\"\n        style=\"display:block;padding: 0.95rem;\"\n        data-ad-client=\"ca-pub-7828333725993554\"\n        data-ad-slot=\"7802654582\"\n        data-ad-format=\"auto\"\n        data-full-width-responsive=\"true\"></ins>\n    <script>\n        (adsbygoogle = window.adsbygoogle || []).push({});\n    </script>",
      "sidebarB": "<!-- 正方形 -->\n      <ins class=\"adsbygoogle\"\n          style=\"display:block\"\n          data-ad-client=\"ca-pub-7828333725993554\"\n          data-ad-slot=\"3508773082\"\n          data-ad-format=\"auto\"\n          data-full-width-responsive=\"true\"></ins>\n      <script>\n          (adsbygoogle = window.adsbygoogle || []).push({});\n      </script>",
      "pageT": "<!-- 固定100% * 90px可显示，max-height:90px未见显示-->\n     <ins class=\"adsbygoogle\"\n          style=\"display:inline-block;width:100%;max-height:90px\"\n          data-ad-client=\"ca-pub-7828333725993554\"\n          data-ad-slot=\"6625304284\"></ins>\n      <script>\n          (adsbygoogle = window.adsbygoogle || []).push({});\n      </script>",
      "pageB": "<!-- 横向自适应 -->\n      <ins class=\"adsbygoogle\"\n          style=\"display:block\"\n          data-ad-client=\"ca-pub-7828333725993554\"\n          data-ad-slot=\"6620245489\"\n          data-ad-format=\"auto\"\n          data-full-width-responsive=\"true\"></ins>\n      <script>\n          (adsbygoogle = window.adsbygoogle || []).push({});\n      </script>",
      "windowRB": "<!-- 固定160*160px -->\n      <ins class=\"adsbygoogle\"\n          style=\"display:inline-block;max-width:160px;max-height:160px\"\n          data-ad-client=\"ca-pub-7828333725993554\"\n          data-ad-slot=\"8377369658\"></ins>\n      <script>\n          (adsbygoogle = window.adsbygoogle || []).push({});\n      </script>\n      "
    }
  }
}